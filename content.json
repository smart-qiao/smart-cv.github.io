{"meta":{"title":"猫了个咪","subtitle":null,"description":"猫了个咪","author":"猫咪","url":""},"pages":[{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2019-08-11T09:21:30.386Z","comments":false,"path":"lab/index.html","permalink":"/lab/index.html","excerpt":"","text":"sakura主题balabalabalabalabalabalabalabalabalabalabalabala","keywords":"Lab实验室"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2019-06-01T14:21:46.000Z","comments":false,"path":"donate/index.html","permalink":"/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2019-06-08T05:56:55.899Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"说两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2019-06-01T14:21:46.000Z","comments":false,"path":"bangumi/index.html","permalink":"/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2019-06-18T13:14:06.832Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; 可爱的我&nbsp; （ 真（ま）白（しろ） ） 对话中... function bot_ui_ini() { var botui = new BotUI(\"hello-mashiro\"); botui.message.add({ delay: 800, content: \"Hi, there111👋\" }).then(function () { botui.message.add({ delay: 1100, content: \"这里是 Dearzhe\" }).then(function () { botui.message.add({ delay: 1100, content: \"一个可爱的蓝孩子~\" }).then(function () { botui.action.button({ delay: 1600, action: [{ text: \"然后呢？ 😃\", value: \"sure\" }, { text: \"少废话！ 🙄\", value: \"skip\" }] }).then(function (a) { \"sure\" == a.value && sure(); \"skip\" == a.value && end() }) }) }) }); var sure = function () { botui.message.add({ delay: 600, content: \"😘\" }).then(function () { secondpart() }) }, end = function () { botui.message.add({ delay: 600, content: \"![...](https://view.moezx.cc/images/2018/05/06/a1c4cd0452528b572af37952489372b6.md.jpg)\" }) }, secondpart = function () { botui.message.add({ delay: 1500, content: \"目前就读于陕西邮电职业技术学院\" }).then(function () { botui.message.add({ delay: 1500, content: \"向往前端却误入JAVA，但后来喜欢上了Python\" }).then(function () { botui.message.add({ delay: 1200, content: \"因为数据分析也需要Coder嘛\" }).then(function () { botui.message.add({ delay: 1500, content: \"主攻 JAVA 语言和 Python，略懂 C，偶尔也折腾 HTML/CSS/JavaScript/PHP\" }).then(function () { botui.message.add({ delay: 1500, content: \"研究的方向，是经济/金融方向的数据分析（data science）以及机器学习（machine learning）\" // content: \"研究的方向，是经济/金融方向的数据分析（data science）以及机器学习（machine learning）\" }).then(function () { botui.message.add({ delay: 1800, content: \"喜欢硬件，希望有一天能够玩转树莓派\" }).then(function () { botui.action.button({ delay: 1100, action: [{ text: \"为什么叫Dearzhe呢？ 🤔\", value: \"because I'm the cutest.\" }] }).then(function (a) { thirdpart() }) }) }) }) }) }) }) }, thirdpart = function () { botui.message.add({ delay: 1E3, content: \"Mashiro以及站名都来自一部动画，因为和主角有一样的爱好~ 如果有兴趣可以找找首页上的视频~\" }).then(function () { botui.action.button({ delay: 1500, action: [{ text: \"为什么是白猫呢？ 🤔\", value: \"why-cat\" }] }).then(function (a) { fourthpart() }) }) }, fourthpart = function () { botui.message.add({ delay: 1E3, content: \"因为对GitHub有种执念… \" }).then(function () { botui.message.add({ delay: 1100, content: \"而且我真的是猫控！\" }).then(function () { botui.action.button({ delay: 1500, action: [{ text: \"域名有什么含意吗？(ง •_•)ง\", value: \"why-domain\" }] }).then(function (a) { fifthpart() }) }) }) }, fifthpart = function () { botui.message.add({ delay: 1E3, content: \"emmmm，看备案信息你就知道了=.= 本来想要zheng.xin的，但50万真买不起。。\" }).then(function () { botui.message.add({ delay: 1600, content: \"那么，仔细看看我的博客吧？ ^_^\" }) }) } } bot_ui_ini()","keywords":"关于"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2019-08-05T18:00:39.588Z","comments":true,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2019-06-01T14:21:46.000Z","comments":false,"path":"music/index.html","permalink":"/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"note","date":"2018-12-20T15:13:35.000Z","updated":"2019-06-08T06:11:56.537Z","comments":false,"path":"note/index.html","permalink":"/note/index.html","excerpt":"","text":"少年不识愁滋味，爱上层楼。爱上层楼，为赋新词强说愁。 而今识尽愁滋味，欲说还休。欲说还休，却道天凉好个秋。 读书志在圣贤 非图科第为官心存军国 岂计身家 ##4636## ##21#*21999999# 一气混元 两仪初分 三尖相照 四梢齐备 五行攒聚 六合弥真 七疾存身 八绝奇巧 九九归真 十丈红尘做“真丈夫”也！朕为大地山河主，忧国忧民事转烦。百年三万六千日，不及僧家半日闲。 炮制虽繁必不敢省人工品味虽贵必不敢减物力","keywords":"凌霄笔记"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2019-06-01T14:21:46.000Z","comments":true,"path":"rss/index.html","permalink":"/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2019-06-18T13:15:57.543Z","comments":true,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":"hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh"},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2019-06-01T14:21:46.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2019-06-01T14:21:46.000Z","comments":false,"path":"video/index.html","permalink":"/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"php 模拟登录自动发微博","slug":"php-模拟登录自动发微博","date":"2020-02-13T16:02:19.000Z","updated":"2020-02-13T16:02:31.725Z","comments":true,"path":"2020/02/14/php-模拟登录自动发微博/","link":"","permalink":"/2020/02/14/php-模拟登录自动发微博/","excerpt":"","text":"","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"php随机一行读取txt","slug":"php随机一行读取txt","date":"2020-02-13T15:58:57.000Z","updated":"2020-02-13T16:01:45.795Z","comments":true,"path":"2020/02/13/php随机一行读取txt/","link":"","permalink":"/2020/02/13/php随机一行读取txt/","excerpt":"","text":"php &lt;?php // 存储数据的文件 function hit(){ $filename = &#39;text.txt&#39;; header(&#39;Content-type: text/html; charset=utf-8&#39;); if(!file_exists($filename)) { die($filename . &#39; 数据文件不存在&#39;); } $data = file_get_contents($filename); $data = explode(PHP_EOL, $data); $result = $data[array_rand($data)]; $result = str_replace(array(&quot;\\r&quot;,&quot;\\n&quot;,&quot;\\r\\n&quot;), &#39;&#39;, $result); return &quot;$result&quot;; } $h = hit(); echo $h;","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"爬取一言到txt","slug":"爬取一言到txt","date":"2020-02-13T15:55:10.000Z","updated":"2020-02-13T15:58:11.456Z","comments":true,"path":"2020/02/13/爬取一言到txt/","link":"","permalink":"/2020/02/13/爬取一言到txt/","excerpt":"","text":"nodeconst https = require(&#39;https&#39;); var fs = require(&#39;fs&#39;); let url = &#39;https://v1.hitokoto.cn/?c=f&amp;encode=text&#39;; var i = 0; for( i = 1; i &lt; 1000;i++){ https.get(url, function (res) { let chunks = [], size = 0; res.on(&#39;data&#39;, function (chunk) { chunks.push(chunk); size += chunk.length; }); res.on(&#39;end&#39;, function () { console.log(&#39;数据包传输完毕&#39;); let data = Buffer.concat(chunks, size); console.log(data); let html = data.toString() + &quot;\\n&quot;; fs.appendFile(&#39;text.txt&#39;,html,&#39;utf8&#39;,function(err){ if(err) console.log(&#39;写文件出错了，错误是：&#39;+err); else console.log(&#39;ok&#39;); }) console.log(html); }); }) }","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"pip使用清华源","slug":"pip使用清华源","date":"2020-02-08T07:57:43.000Z","updated":"2020-02-08T07:58:22.588Z","comments":true,"path":"2020/02/08/pip使用清华源/","link":"","permalink":"/2020/02/08/pip使用清华源/","excerpt":"","text":"pip install -i https://pypi.tuna.tsinghua.edu.cn/simple numpy","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"树莓派常用的软件(FTP篇)","slug":"树莓派常用的软件-FTP篇","date":"2020-02-01T09:05:11.000Z","updated":"2020-02-01T09:07:24.867Z","comments":true,"path":"2020/02/01/树莓派常用的软件-FTP篇/","link":"","permalink":"/2020/02/01/树莓派常用的软件-FTP篇/","excerpt":"","text":"无论安装什么软件,首先运行下列命令，确定所使用的是最新系统软件。sudo apt-get update &amp;&amp; sudo apt-get upgrade -y FTP1.安装ftp服务器sudo apt-get install vsftpd 2.启动ftp服务sudo service vsftpd start 3.修改默认配置sudo nano /etc/vsftpd.conf //set config // 不允许匿名访问 anonymous_enable=NO // 可以写入 write_enable=YES // 设置上传文件掩码 local_umask=022 // 使用utf-8字符集 utf8_filesystem=YES 不允许用户浏览自己根目录以外目录需额外做如下修改： //取消注释并将其改为NO chroot_local_user=NO //设置通过读取文件确定哪些用户不允许离开自己的用户目录 chroot_list_enable=YES 注意，需指定限制用户列表 设置了chroot_list_enable=YES后，必须建立列表文件， 否则客户端连接失败 建立/etc/vsftpd.chroot_list文件，将不允许离开自己根目录的用户加入到该文件中，一行一个用户名比如： sudo nano /etc/vsftpd.chroot_listTips:在文件中添加限制的用户名:test 4.重启ftp：sudo service vsftpd restart","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"树莓派常用的软件(服务器篇)","slug":"树莓派常用的服务-服务器篇","date":"2020-02-01T08:53:23.000Z","updated":"2020-02-01T09:14:36.726Z","comments":true,"path":"2020/02/01/树莓派常用的服务-服务器篇/","link":"","permalink":"/2020/02/01/树莓派常用的服务-服务器篇/","excerpt":"","text":"1.首先是Apache,sudo apt-get install apache2 apache2-doc apache2-utilsor是安装Nginxsudo apt install nginx 2.为了支持PHP sudo apt install php-fpm至少现在官方源还支持(2020 02.01 17：01) Tips:Apache:启动：sudo /etc/init.d/apache2 start重启：sudo /etc/init.d/apache2 restart关闭：sudo /etc/init.d/apache2 stop","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"正则匹配密码：仅包含字母大小写数字 至少两个数字  密码至少8位","slug":"正则匹配密码：仅包含字母大小写数字-至少两个数字-密码至少8位","date":"2019-12-24T16:27:27.000Z","updated":"2019-12-24T16:37:36.862Z","comments":true,"path":"2019/12/25/正则匹配密码：仅包含字母大小写数字-至少两个数字-密码至少8位/","link":"","permalink":"/2019/12/25/正则匹配密码：仅包含字母大小写数字-至少两个数字-密码至少8位/","excerpt":"","text":"正则匹配密码：仅包含字母大小写数字 至少两个数字 密码至少8位 正则：&quot;^(?=.*\\d.*\\d)[0-9a-zA-Z]{8,}$&quot;;第二种正则&quot;^[A-Za-z0-9]*?\\d+[A-Za-z0-9]*?\\d+[A-Za-z0-9]{6,30}$&quot;;java 实现import java.util.Scanner; public class Pwd{ public static final String PW_REG = &quot;^(?=.*\\\\d.*\\\\d)[0-9a-zA-Z]{8,}$&quot;; public static void main(String[] args) { Scanner scan = new Scanner(System.in); String pwd = scan.next(); if (pwd.matches(PW_REG) == false){ System.out.println(&quot;不是一个有效密码&quot;); } else System.out.println(&quot;是一个有效密码&quot;); } }字符串需要转义”\\d” -&gt; “\\d”","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"氢云笔记","slug":"氢云笔记","date":"2019-11-08T14:47:17.000Z","updated":"2019-11-08T14:52:28.477Z","comments":true,"path":"2019/11/08/氢云笔记/","link":"","permalink":"/2019/11/08/氢云笔记/","excerpt":"","text":"氢云笔记氢云笔记氢云笔记氢云笔记氢云笔记","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"MYSQL数据库高级注入","slug":"MYSQL数据库高级注入","date":"2019-11-03T14:19:49.000Z","updated":"2019-11-03T14:27:26.543Z","comments":true,"path":"2019/11/03/MYSQL数据库高级注入/","link":"","permalink":"/2019/11/03/MYSQL数据库高级注入/","excerpt":"","text":"数据库高级注入:1.数据库基础(1)连接数据库 mysql -uusername -pip -ppassword 查看数据库show databases; 创建数据库 create database 数据库名; 删除数据接drop database 数据库名; 选择数据表 use database 数据库名; 创建表 create table sin(); 查看表结构 show columns from 表名 from 数据库名;2.数据库基础(2)3.数据库基础(3)4.手工注入-联合查询5.手工注入-nysql5.0 暴库6.MySQL高级注入技巧","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"数据库 mysql","slug":"数据库-mysql","permalink":"/tags/数据库-mysql/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"srclove.cn","slug":"srclove-cn","date":"2019-10-29T12:46:39.000Z","updated":"2019-10-29T12:51:38.170Z","comments":true,"path":"2019/10/29/srclove-cn/","link":"","permalink":"/2019/10/29/srclove-cn/","excerpt":"","text":"","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"oracle常用命令","slug":"oracle常用命令","date":"2019-09-11T14:02:29.000Z","updated":"2019-09-11T15:30:12.478Z","comments":true,"path":"2019/09/11/oracle常用命令/","link":"","permalink":"/2019/09/11/oracle常用命令/","excerpt":"","text":"登录使用系统用户请登录:[username/password] [@server] [as sysdba|sysoper] 查看登陆用户:show user数据字典——查看其他用户信息:desc dba_users -&gt; select username from dba_users;启动|关闭 scott 用户alter user username(scott) account unlock|lock; -&gt;alter user scott account unlock; 表空间dba_tablespces、user_tablespaces 数据字典dba_users、user_users 数据字典 查看表空间desc dba_tablespaces -&gt;select tablespaces from dba_table_spaces; 设置用户默认表空间和临时表空间ALTER USER username DEFAULT|TEMPPORARY TABLESPACE tablespaces_name; 创建表空间CREATE [TEMPORARY] TABLESPACE tablespace_name TEMPFILE|DATAFILE ‘XX.dbf’ SIZE xx -&gt; CREATE TABLESPACE test1_tablespace DATAFILE &#39;testfile.dbf&#39; size 10m;Create tempspace tablespace temptest1_tablespace TEMPFILE &#39;tempfile.dbf&#39; size 10m; 修改表空间状态设置表空间联机脱机状态ALTER TABLESPACE tablespace_name ONLINE|OFFLINE; 设置只读或可读写状态ALTER TABLESPACE tablespace_name READ ONLY|READ WRITE; 修改表空间数据文件添加|删除 表空间数据文件ALTER TABLESPACE tablespace_name ADD|DROP DATAFILE ‘xx.dbf’ size xx;","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"windows10配置多个git账户","slug":"windows10配置多个git账户","date":"2019-09-09T12:05:44.000Z","updated":"2019-09-09T12:05:44.097Z","comments":true,"path":"2019/09/09/windows10配置多个git账户/","link":"","permalink":"/2019/09/09/windows10配置多个git账户/","excerpt":"","text":"","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"vbs小技巧","slug":"vbs小技巧","date":"2019-08-27T01:30:20.000Z","updated":"2019-08-28T11:45:01.169Z","comments":true,"path":"2019/08/27/vbs小技巧/","link":"","permalink":"/2019/08/27/vbs小技巧/","excerpt":"","text":"使用程序对说话新建.txtCreateObject(&quot;SAPI.SpVoice&quot;).Speak &quot;I love you&quot;保存为vbs","categories":[],"tags":[],"keywords":[]},{"title":"简单查找","slug":"简单查找","date":"2019-08-24T10:22:56.000Z","updated":"2019-09-08T05:01:39.961Z","comments":true,"path":"2019/08/24/简单查找/","link":"","permalink":"/2019/08/24/简单查找/","excerpt":"","text":"顺序查找 package cn.srclove; public class order { public static void main() { int[] arr = {1,2,3,4,5,6,7,8}; int index = 0; for(int i = 0; i &lt; arr.length; i++) { if(arr[i] == 5) { index =arr[i]; } } System.out.println(&quot;对应的索引为:&quot;+index); } }二分查找法有序数组 //循环 package cn.srclove; public class binary { public static void main(String[] args) { int[] arr = {1,2,3,4,5,6,7,8}; int index =binarySearch(arr,1); System.out.println(index); } public static int binarySearch(int[] arr,int item ) { int low = 0; int high = 0; int index = -1; int mid = (low + high)/2; int guess =arr[mid]; while(low &lt;= high) { if(guess == item) { index = mid; break; } if(guess &gt; item) { high = mid - 1; } if(guess &lt; item) { low = mid + 1; } } return index; } }递归 // Array.sort(arr);//Array.binarySearch(arr,item)","categories":[],"tags":[],"keywords":[]},{"title":"斐波那契数列","slug":"斐波那契数列","date":"2019-08-23T04:12:59.000Z","updated":"2019-08-28T11:45:01.169Z","comments":true,"path":"2019/08/23/斐波那契数列/","link":"","permalink":"/2019/08/23/斐波那契数列/","excerpt":"","text":"","categories":[],"tags":[],"keywords":[]},{"title":"汇编语言","slug":"汇编语言","date":"2019-08-13T10:58:47.000Z","updated":"2019-09-06T13:04:03.740Z","comments":true,"path":"2019/08/13/汇编语言/","link":"","permalink":"/2019/08/13/汇编语言/","excerpt":"","text":"C语言学了这麽久，这几天有时间顺便学习下汇编 mips mars 模拟器·http://courses.missouristate.edu/kenvollmar/mars/ 段结束程序结束程序返回","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"KMP算法","slug":"kmp算法","date":"2019-08-11T09:03:05.000Z","updated":"2019-09-06T13:04:03.741Z","comments":true,"path":"2019/08/11/kmp算法/","link":"","permalink":"/2019/08/11/kmp算法/","excerpt":"","text":"// KMP算法 KMP","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"算法","slug":"算法","permalink":"/tags/算法/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"快速排序","slug":"快速排序","date":"2019-08-11T08:59:04.000Z","updated":"2019-09-06T13:04:03.740Z","comments":true,"path":"2019/08/11/快速排序/","link":"","permalink":"/2019/08/11/快速排序/","excerpt":"","text":"快速排序基本思想 选取Pivot中心轴 将大于Pivot的数字放在Pivot的右边 将小于Pivot的数字放在Pivot的左边 分别对左右子序列重复前三部操作","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"算法","slug":"算法","permalink":"/tags/算法/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"排序算法","slug":"排序算法","date":"2019-08-11T08:48:22.000Z","updated":"2019-09-06T13:04:03.740Z","comments":true,"path":"2019/08/11/排序算法/","link":"","permalink":"/2019/08/11/排序算法/","excerpt":"","text":"// 排序算法 选择排序(selection Sort)1 0 6 9 4 3 遍历数组，找出最大(最小)值，和最`后一个`交换 1 0 6 `9` 4 `3` ---&gt; 1 0 6 `3` 4 `9` 1 0 `6` 3 `4` 9 ---&gt; 1 0 `4` 3 `6` 9 1 0 `4` `3` 6 9 ---&gt; 1 0 `3` `4` 6 9 1 0 `3` `4` 6 9 ---&gt; 1 0 `3` `4` 6 9 ... #include&lt; stdio.h&gt; int findMaxPos(int arr[],int n){ int max = arr[0]; int pos = 0; int i; for(i = 0;i &lt; n;i++){ if(arr[i] &gt; max){ max = arr[i]; pos = i; } return pos; } } void selectionSort(int arr[],int n){ while(n&gt;1){ int pos = findMaxPos(arr[],n); int temp = arr[pos]; arr[pos] = arr[n-1]; arr[n-1] = temp; n--; } } int main(){ int arr[]={1, 0, 6, 9, 4, 3}; selectSort(arr[],9); int i; for(int i = 0;i &lt;= 9;i++) printf(&quot;%d\\n&quot;,arr[i]); }冒泡排序(bubble Sort)1 0 6 9 4 3 两两相比较，找出最大的,经过一趟排序后在最后面 (石沉大海) [1 0] 6 9 4 3 ---&gt; [0 1] 6 9 4 3 0 [1 6] 9 4 3 ---&gt; 0 [1 6] 9 4 3 0 1 [6 9] 4 3 ---&gt; 0 1 [6 9] 4 3 0 1 6 [9 4] 3 ---&gt; 0 1 6 [4 9] 3 0 1 6 4 [9 3] ---&gt; 0 1 6 4 [3 9] ————- 采用函数封装一下 ————- #include &lt;stdio.h&gt; void bubble(arr[], int n){ int i; int temp; for(i = 0;i &lt; n-1 ;i++ ){ if(arr[i] &gt; arr[i+1]){ temp =arr[i]; arr[i] = arr[i+1]; arr[i+1] = temp; } } } void bubbleSort(int arr[],int n){ ``` /*bubble(arr,n) bubble(arr,n-1) bubble(arr,n-2) bubble(arr,1)*/ ``` int i; for(i = n;i &gt;=1;i--){ bubble(arr,i); } } int main(){ int arr[] = {1, 0, 6, 9, 4, 3}; int i; bubbleSort(arr,9) }————- *简化下书本的 * ————- void bublleSort(int *arr, int length) { for(int i = 0; i &lt; length - 1; i++) { //趟数 for(int j = 0; j &lt; length - i - 1; j++) { //比较次数 if(arr[j] &gt; arr[j+1]) { int temp = arr[j]; arr[j] = arr[j+1]; arr[j+1] = temp; } } } }插入排序(insertion Sort)","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"算法","slug":"算法","permalink":"/tags/算法/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"正则表达式入门","slug":"正则表达式入门","date":"2019-08-06T18:21:20.000Z","updated":"2019-09-06T13:04:03.741Z","comments":true,"path":"2019/08/07/正则表达式入门/","link":"","permalink":"/2019/08/07/正则表达式入门/","excerpt":"","text":"","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"正则表达式","slug":"正则表达式","permalink":"/tags/正则表达式/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"我竟然做了一个小游戏","slug":"我竟然做了一个小游戏","date":"2019-08-05T17:29:45.000Z","updated":"2019-09-06T13:04:03.741Z","comments":true,"path":"2019/08/06/我竟然做了一个小游戏/","link":"","permalink":"/2019/08/06/我竟然做了一个小游戏/","excerpt":"","text":"试玩","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"全平台应用打包","slug":"全平台应用打包","date":"2019-08-04T10:49:41.000Z","updated":"2019-09-06T13:04:03.740Z","comments":true,"path":"2019/08/04/全平台应用打包/","link":"","permalink":"/2019/08/04/全平台应用打包/","excerpt":"","text":"Hybrid APP 全平台打包 Hybrid APP的种类和原理 基于webview 基于原生UI 面向Hybrid APP的SPA 用Electron打包Windows Mac Linux应用 用Cordova打包Android iOS 应用 虽然我是不喜欢Hbuild,还是推荐下; 经细心同学发现,Hbuild 也可以打包Android 、iOS 平台应用,不过要将代码上传到H5+服务器，可能存在一些安全问题，好在比较快速方便,能够快速打包并发布app。","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"vue版的todolist","slug":"vue版的todolist","date":"2019-08-03T13:31:37.000Z","updated":"2019-08-11T09:14:49.083Z","comments":true,"path":"2019/08/03/vue版的todolist/","link":"","permalink":"/2019/08/03/vue版的todolist/","excerpt":"","text":"","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"vue","slug":"vue","permalink":"/tags/vue/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"js小技巧","slug":"js小技巧","date":"2019-07-17T10:35:12.000Z","updated":"2019-09-06T13:04:03.741Z","comments":true,"path":"2019/07/17/js小技巧/","link":"","permalink":"/2019/07/17/js小技巧/","excerpt":"","text":"document.body.innerText data:text/html, &lt;html contenteditable&gt;js自动刷新timeout=prompt(&quot;Set timeout (Second):&quot;); count=0 current=location.href; if(timeout&gt;0) setTimeout(&#39;reload()&#39;,1000*timeout); else location.replace(current); function reload(){ setTimeout(&#39;reload()&#39;,1000*timeout); count++; console.log(&#39;每（&#39;+timeout+&#39;）秒自动刷新,刷新次数：&#39;+count); fr4me=&#39;&lt;frameset cols=\\&#39;*\\&#39;&gt;\\n&lt;frame src=\\&#39;&#39;+current+&#39;\\&#39;/&gt;&#39;; fr4me+=&#39;&lt;/frameset&gt;&#39;; with(document){write(fr4me);void(close())}; }","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"/tags/javascript/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"jQuery呀","slug":"jQuery呀","date":"2019-07-16T14:01:32.000Z","updated":"2019-09-06T13:04:03.741Z","comments":true,"path":"2019/07/16/jQuery呀/","link":"","permalink":"/2019/07/16/jQuery呀/","excerpt":"","text":"","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"关于JavaScript还需要学习的","slug":"关于JavaScript还需要学习的","date":"2019-07-12T12:47:22.000Z","updated":"2019-09-12T11:30:33.462Z","comments":true,"path":"2019/07/12/关于JavaScript还需要学习的/","link":"","permalink":"/2019/07/12/关于JavaScript还需要学习的/","excerpt":"","text":"JS事件JacaScript 常用事件 事件 描述 onClick 单击事件 onMouseOver 鼠标经过事件 onMouseOut 鼠标移出事件 onChange 文本内容改变事件 onSelect 文本框选中事件 onFocus 光标聚集事件 onBlur 移开光标事件 onLoad 网页加载事件 onUnload 关闭网页事件 HTML DOM 当网页被加载时，浏览器会创建页面的文档对象模型(Document Object Model) DOM 简介: JavaScript 能改变页面中的所有HTML元素 JavaScript 能改变页面中的所有HTML属性 JavaScript 能改变页面中的所有CSS样式 JavaScript 能够应对页面中的所有事件做出反应 DOM 操作HTML: 改变HTML输出流: 绝对不要在文档加载完成之后使用document.wrie()会覆盖该文档 寻找元素: 通过id找到HTML元素 通过标签名找到HTML元素 改变HTML内容: 使用属性:innerHTML语法 var nav = document.getElementById(&quot;id&quot;).innerHTml = &quot;container&quot; }``` ```document.getElentmentByTagName(&quot;p&quot;); //匹配相同元素标签名的第一个 改编HTML属性: 使用属性:attribute语法document.getElementById(&quot;herfid&quot;).href=&quot;#&quot;document.getElementById(&quot;srcid&quot;).src=&quot;#&quot;...... DOM 操作CSS: 通过DOM对象改变CSS 语法 document.getElementById(&quot;id&quot;).style.property = new style; document.getElementById(&quot;id&quot;).style.coler= red; DOM EventListener 方法: addEventListener(); removeEventListener(); addEventListener(); DOM JS事件详解-事件流 事件流 事件冒泡:由最具体的元素接收，然后逐级向上传播至最不具体的元素节点(DOM文档) 事件捕获:最不具体的节点先接收事件，而最具体的节点应该是最后接受的事件 JS事件详解-事件处理 HTML事件处理 直接添加到HTMl结构中 DOM0级事件处理 //会被覆盖 把一个函数值赋值给一个事件处理程序属性 DOM2级事件处理 //不会覆盖 addEventListener(“事件名”,”事件处理函数”,”布尔值”) true:事件捕获 false:事件冒泡 removeEventListener(); IE事件处理程序 attachEvent detachEvent JS事件详解-事件对象 事件对象: 在触发DOM事件的时候都会产生一个对象 事件对象envent: type: 获取事件类型 target: 获取事件元素目标 stopPropagation():阻止事件冒泡 preventDefault():阻止事件默认行为 JS内置对象 对象 String字符串对象 Data日期对象 Array数组对象 Math对象","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"/tags/javascript/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"响应式布局的基本实现","slug":"响应式布局的基本实现","date":"2019-07-11T05:51:47.000Z","updated":"2019-09-06T13:04:03.741Z","comments":true,"path":"2019/07/11/响应式布局的基本实现/","link":"","permalink":"/2019/07/11/响应式布局的基本实现/","excerpt":"","text":"响应式布局的基本实现1.CSS 中的Media Quary (媒体简介)； 设备宽高：device-width,device-height(物理设备) 渲染窗口的宽和高：width,height 设备的手持方向；orientation 设备的分辨率：resolution 2.使用方法 外联 内嵌样式 Codingindex.html &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot; media=&quot;only screen and (max-width:640px)&quot;&gt; &lt;style&gt; @media screen and (min-width:640px){ body{ background-color: coral; } } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;/html&gt;style.css *{ padding: 0px; margin: 0px; } body{ background-color: aqua; } 响应式布局的实例操作Codingindex.html &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;heading&quot;&gt;heading&lt;/div&gt; &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;left&quot;&gt;left&lt;/div&gt; &lt;div class=&quot;main&quot;&gt;main&lt;/div&gt; &lt;div class=&quot;right&quot;&gt;right&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;footing&quot;&gt;footing&lt;/div&gt; &lt;/body&gt; &lt;/html&gt;style.css *{ padding: 0px; margin: 0px; } .heading,.container,.footing{ margin: 10px auto; } .heading{ height: 100px; background-color: aqua; } .right,.left,.main{ background-color: aquamarine; } .footing{ height: 100px; background-color: bisque; } @media screen and (min-width:960px){ .heading,.container,.footing{ width: 960px; } .left,.main,.right{ float: left; height: 500px; } .left,.right{ width: 200px; } .main{ margin-left: 5px; margin-right: 5px; width: 550px; } .container{ height: 500px; } } @media screen and (min-width:600px) and (max-width:960px) { .heading,.container,.footing{ width: 600px; } .left,.main{ height: 400px; float: left; } .right{ display: none; } .left{ width: 160px; } .main{ width: 435px; margin-left: 5px; } .container{ height: 400px; } } @media screen and (max-width:600px){ .heading,.container,.footing{ width: 400px; } .left,.right{ width: 400px; height: 100px; } .main{ margin-top: 10px; width: 400px; height: 200px; } .right{ margin-top: 10px; } .container{ height: 420px; } } bootstrap","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"bootstrap","slug":"bootstrap","permalink":"/tags/bootstrap/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"vscode文本文档换行","slug":"vscode文本文档换行","date":"2019-07-11T04:46:45.000Z","updated":"2019-08-11T09:15:38.570Z","comments":true,"path":"2019/07/11/vscode文本文档换行/","link":"","permalink":"/2019/07/11/vscode文本文档换行/","excerpt":"","text":"","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"vscode","slug":"vscode","permalink":"/tags/vscode/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"BootStrap","slug":"BootStrap","date":"2019-07-07T03:28:26.000Z","updated":"2019-09-06T13:04:03.741Z","comments":true,"path":"2019/07/07/BootStrap/","link":"","permalink":"/2019/07/07/BootStrap/","excerpt":"","text":"BootStrap能干什么 通过Reboot清理和统一了各个浏览器的内置样式 通过Layou提供了一个支持复杂布局的一个网格结构 通过Component提供一系列的常用增强插件 通过其生态提供大量可用的风格各异的主体Layout和Responsive breakpoint组件实战&gt;&gt;&gt;Srclove","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"bootstrap","slug":"bootstrap","permalink":"/tags/bootstrap/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"浮生","slug":"see","date":"2019-07-06T11:54:04.000Z","updated":"2019-09-11T14:20:58.567Z","comments":true,"path":"2019/07/06/see/","link":"","permalink":"/2019/07/06/see/","excerpt":"","text":"初见漫长的等待也是值得的，今天总算是见到你了·","categories":[{"name":"生活","slug":"生活","permalink":"/categories/生活/"}],"tags":[],"keywords":[{"name":"生活","slug":"生活","permalink":"/categories/生活/"}]},{"title":"kali上好玩的操作","slug":"kali上好玩的操作","date":"2019-07-06T10:01:51.000Z","updated":"2019-09-06T13:04:03.741Z","comments":true,"path":"2019/07/06/kali上好玩的操作/","link":"","permalink":"/2019/07/06/kali上好玩的操作/","excerpt":"","text":"","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"面向对象的 css (OO CSS)","slug":"OO-CSS","date":"2019-06-27T10:46:12.000Z","updated":"2019-09-06T13:04:03.744Z","comments":true,"path":"2019/06/27/OO-CSS/","link":"","permalink":"/2019/06/27/OO-CSS/","excerpt":"","text":"OO CSS注意事项:","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"Laravel--艺术家的框架","slug":"Laravel-艺术家的框架","date":"2019-06-21T13:33:30.000Z","updated":"2019-08-04T14:15:17.783Z","comments":true,"path":"2019/06/21/Laravel-艺术家的框架/","link":"","permalink":"/2019/06/21/Laravel-艺术家的框架/","excerpt":"","text":"composer installcomposer config -g repo.packagist composer https://packagist.composer-proxy.orgcomposer config -g repo.packagist composer https://p.staticq.comcomposer config -g repo.packagist composer https://packagist.phpcomposer.com 1.安装PHP包管理工具composer 安装 - Windows 使用安装程序 这是将 Composer 安装在你机器上的最简单的方法。 下载并且运行 Composer-Setup.exe，它将安装最新版本的 Composer ，并设置好系统的环境变量，因此你可以在任何目录下直接使用 composer 命令。 composer下载地址：https://getcomposer.org/Composer-Setup.exe 直接下载运行即可。 安装完成后在终端输入 composer -v 2.安装PHP的laravel框架php的laravel框架是一款非常优秀的php框架 这是中文文档的网站：https://laravelacademy.org/ 源码下载后进入项目根目录使用cmd命令行工具或者其他的终端工具都是可以，数据命令: composer install安装完成后输入 composer dump-autoload 4.配置项目把.env.example重命名为 .env 5.生成数据库表在根目录执行 php artisan migrate进行数据表迁移，MySQL一定要5.7以上，否则会报错 数据表文件在这个目录下：wechatAlliance\\database\\migrations 6.运行项目在项目根目录运行 php artian serve 项目就跑起来了浏览器访问http://127.0.0.1:8000 Laravel 的文件夹结构","categories":[],"tags":[],"keywords":[]},{"title":"vi常用命令","slug":"vi常用命令","date":"2019-06-19T12:52:53.000Z","updated":"2019-09-06T13:04:03.750Z","comments":true,"path":"2019/06/19/vi常用命令/","link":"","permalink":"/2019/06/19/vi常用命令/","excerpt":"","text":"Linux vi中查找字符内容的方法 使用vi编辑器编辑长文件时，常常是头昏眼花，也找不到需要更改的内容。 这时，使用查找功能尤为重要。 方法如下： 1、命令模式下输入“/字符串”，例如“/Section 3”。 2、如果查找下一个，按“n”即可。 要自当前光标位置向上搜索，请使用以下命令： /pattern Enter 其中，pattern表示要搜索的特定字符序列。 要自当前光标位置向下搜索，请使用以下命令： ?pattern Enter 按下 Enter键后，vi 将搜索指定的pattern，并将光标定位在 pattern的第一个字符处。例如，要向上搜索 place一词，请键入： vi 查找替换大全 vi/vim 中可以使用 :s 命令来替换字符串。以前只会使用一种格式来全文替换，今天发现该命令有很多种写法（vi 真是强大啊，还有很多需要学习），记录几种在此，方便以后查询。 :s/vivian/sky/ 替换当前行第一个 vivian 为 sky :s/vivian/sky/g 替换当前行所有 vivian 为 sky :n,$s/vivian/sky/ 替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky :n,$s/vivian/sky/g 替换第 n 行开始到最后一行中每一行所有 vivian 为 sky n 为数字，若 n 为 .，表示从当前行开始到最后一行 :%s/vivian/sky/（等同于 :g/vivian/s//sky/） 替换每一行的第一个 vivian 为 sky :%s/vivian/sky/g（等同于 :g/vivian/s//sky/g） 替换每一行中所有 vivian 为 sky 可以使用 # 作为分隔符，此时中间出现的 / 不会作为分隔符 :s#vivian/#sky/# 替换当前行第一个 vivian/ 为 sky/ :%s+/oradata/apras/+/user01/apras1+ （使用+ 来 替换 / ）： /oradata/apras/替换成/user01/apras1/ 1.:s/vivian/sky/ 替换当前行第一个 vivian 为 sky :s/vivian/sky/g 替换当前行所有 vivian 为 sky 2.:n,$s/vivian/sky/ 替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky :n,$s/vivian/sky/g 替换第 n 行开始到最后一行中每一行所有 vivian 为 sky (n 为数字，若 n 为 .，表示从当前行开始到最后一行) 3.:%s/vivian/sky/（等同于 :g/vivian/s//sky/） 替换每一行的第一个 vivian 为 sky :%s/vivian/sky/g（等同于 :g/vivian/s//sky/g） 替换每一行中所有 vivian 为 sky 4.可以使用 # 作为分隔符，此时中间出现的 / 不会作为分隔符 :s#vivian/#sky/# 替换当前行第一个 vivian/ 为 sky/ 5.删除文本中的^M 问题描述：对于换行,window下用回车换行(0A0D)来表示，Linux下是回车(0A)来表示。这样，将window上的文件拷到Unix上用时，总会有个^M.请写个用在unix下的过滤windows文件的换行符(0D)的shell或c程序。 · 使用命令：cat filename1 | tr -d “^V^M” &gt; newfile； · 使用命令：sed -e “s/^V^M//” filename &gt; outputfilename。需要注意的是在1、2两种方法中，^V和^M指的是Ctrl+V和Ctrl+M。你必须要手工进行输入，而不是粘贴。 · 在vi中处理：首先使用vi打开文件，然后按ESC键，接着输入命令：%s/^V^M//。 · :%s/^M$//g 如果上述方法无用，则正确的解决办法是： · tr -d “r” &lt; src &gt;dest · tr -d “15” dest · strings A&gt;B 6.其它 利用 :s 命令可以实现字符串的替换。具体的用法包括： :s/str1/str2/ 用字符串 str2 替换行中首次出现的字符串 str1 :s/str1/str2/g 用字符串 str2 替换行中所有出现的字符串 str1 :.,$ s/str1/str2/g 用字符串 str2 替换正文当前行到末尾所有出现的字符串 str1 :1,$ s/str1/str2/g 用字符串 str2 替换正文中所有出现的字符串 str1 :g/str1/s//str2/g 功能同上 从上述替换命令可以看到：g 放在命令末尾，表示对搜索字符串的每次出现进行替换；不加 g，表示只对搜索 字符串的首次出现进行替换；g 放在命令开头，表示对正文中所有包含搜索字符串的行进行替换操作。 查找到结果后，如何退出查找呢？输入:noh命令。 vi命令示例大全命令历史以:和/开头的命令都有历史纪录，可以首先键入:或/然后按上下箭头来选择某个历史命令。 进入vivi filename # 打开或新建文件，并将光标置于第一行首vi +n filename # 打开文件，并将光标置于第n行首vi + filename # 打开文件，并将光标置于最后一行首vi +/pattern filename # 打开文件，并将光标置于第一个与pattern匹配的串处vi -r filename # 在上次正用vi编辑时发生系统崩溃，恢复filenamevi filename….filename # 打开多个文件，依次进行编辑 文件命令打开单个文件vim file 同时打开多个文件vim file1 file2 file3 … 在vim窗口中打开一个新文件:open file 在新窗口中打开文件:split file 切换到下一个文件:bn 切换到上一个文件:bp 查看当前打开的文件列表，当前正在编辑的文件会用[]括起来。:args 打开远程文件，比如ftp或者share folder:e ftp://192.168.10.76/abc.txt:e \\qadrive\\test\\1.txt vim的模式正常模式（按Esc或Ctrl+[进入） 左下角显示文件名或为空 插入模式（按i键进入） 左下角显示–INSERT– 可视模式（不知道如何进入） 左下角显示–VISUAL– 保存退出w # 保存当前文件w /tmp1 # 另存为/tmp120,59w /tmp1 # 仅将20-59行之间的内存另存为/tmp1x 或 wq # 保存退出q # 退出viq! # 退出不保存!command # 执行shell命令commandn1,n2 w !command # 将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入r !command # 将命令command的输出结果放到当前行w !sudo tee % # 保存没权限时，可获取权限再保存 导航h # 光标左移一个字符l # 光标右移一个字符space # 光标右移一个字符Backspace # 光标左移一个字符k 或 Ctrl+p # 光标上移一行j 或 Ctrl+n # 光标下移一行Enter # 光标下移一行w 或 W # 光标右移一个字至字首b 或 B # 光标左移一个字至字首e 或 E # 光标右移一个字至字尾) # 光标移至句尾( # 光标移至句首} # 光标移至段落开头{ # 光标移至段落结尾nG # 光标移至第n行首n+ # 光标下移n行n- # 光标上移n行n$ # 光标移至第n行尾H # 光标移至屏幕顶行M # 光标移至屏幕中间行L # 光标移至屏幕最后行0 # （注意是数字零）光标移至当前行首$ # 光标移至当前行尾% 括号匹配 屏幕翻滚Ctrl+u # 向文件首翻半屏Ctrl+d # 向文件尾翻半屏Ctrl+f # 向文件尾翻一屏Ctrl＋b # 向文件首翻一屏nz # 将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部 插入i # 在光标前I # 在当前行首a # 光标后A # 在当前行尾o # 在当前行之下新开一行O # 在当前行之上新开一行r # 替换当前字符R # 替换当前字符及其后的字符，直至按ESC键s # 从当前光标位置处开始，以输入的文本替代指定数目的字符S # 删除指定数目的行，并以所输入文本代替之ncw 或 nCW # 修改指定数目的字nCC # 修改指定数目的行 删除ndw 或 ndW # 删除光标处开始及其后的n-1个字do # 删至行首d$ # 删至行尾ndd # 删除当前行及其后n-1行x 或 X # 删除一个字符，x删除光标后的，而X删除光标前的Ctrl+u # 删除输入方式下所输入的文本n1,n2 d # 将n1行到n2行之间的内容删除%d # 删除全部内容1,$d # 删除全部内容 复制粘贴、剪切、移动yy # 复制当前行nyy # 复制当前行开始的n行先按 v 然后方向键选择区域，按 y 复制选中行dd # 剪切当前行p（小） # 在当前光标处下面粘贴内容。P（大） # 在当前光标处上面粘贴内容n1,n2 co n3 # 将n1行到n2行之间的内容拷贝到第n3行下n1,n2 m n3 # 将n1行到n2行之间的内容移至到第n3行下 搜索（查找）/abc # 从光标开始处向文件尾搜索abc?abc # 从光标开始处向文件首搜索abc//abc # 从光标开始处向文件尾搜索/abc，其中/是转义n # 在同一方向重复上一次搜索命令N # 在反方向上重复上一次搜索命令 替换s/vivian/sky/ # 替换当前行第一个 vivian 为 skys/vivian/sky/g # 替换当前行所有 vivian 为 skyn,$s/vivian/sky/ # 替换第 n 行开始到最后一行中每一行的第一个 vivian 为 skyn,$s/vivian/sky/g # 替换第 n 行开始到最后一行中每一行所有 vivian 为sky%s/vivian/sky/g # （等同于 g/vivian/s//sky/） 替换每一行的每一个 vivian 为 skys#vivian/#sky/# # 替换当前行第一个 vivian/ 为 sky/（可以使用 #或+作为分隔符，此时中间出现的 / 不会作为分隔符）s/p1/p2/g # 将当前行中所有p1均用p2替代n1,n2s/p1/p2/g # 将第n1至n2行中所有p1均用p2替代g/p1/s//p2/g # 将文件中所有p1均用p2替换 寄存器“?nyy # 将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字“?nyw # 将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字“?nyl # 将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字“?p # 取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字ndd # 将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。 选项设置set number # 显示行号set number! # 不显示行号，其它选项同理加！号set all # 列出所有选项设置情况set term # 设置终端类型set ignorance # 在搜索中忽略大小写set list # 显示制表位(Ctrl+I)和行尾标志（$)set report # 显示由面向行的命令修改过的数目set terse # 显示简短的警告信息set warn # 在转到别的文件时若没保存当前文件则显示NO write信息set nomagic # 允许在搜索模式中，使用前面不带“”的特殊字符set nowrapscan # 禁止vi在搜索到达文件两端时，又从另一端开始set mesg # 允许vi显示其他用户用write写到自己终端上的信息 插入命令i 在当前位置生前插入 I 在当前行首插入 a 在当前位置后插入 A 在当前行尾插入 o 在当前行之后插入一行 O 在当前行之前插入一行 查找命令/text 查找text，按n健查找下一个，按N健查找前一个。 ?text 查找text，反向查找，按n健查找下一个，按N健查找前一个。 vim中有一些特殊字符在查找时需要转义 .*[]^%/?~$ :set ignorecase 忽略大小写的查找 :set noignorecase 不忽略大小写的查找 查找很长的词，如果一个词很长，键入麻烦，可以将光标移动到该词上，按*或#键即可以该单词进行搜索，相当于/搜索。而#命令相当于?搜索。 :set hlsearch 高亮搜索结果，所有结果都高亮显示，而不是只显示一个匹配。 :set nohlsearch 关闭高亮搜索显示 :nohlsearch 关闭当前的高亮显示，如果再次搜索或者按下n或N键，则会再次高亮。 :set incsearch 逐步搜索模式，对当前键入的字符进行搜索而不必等待键入完成。 :set wrapscan 重新搜索，在搜索到文件头或尾时，返回继续搜索，默认开启。 替换命令ra 将当前字符替换为a，当期字符即光标所在字符。 s/old/new/ 用old替换new，替换当前行的第一个匹配 s/old/new/g 用old替换new，替换当前行的所有匹配 %s/old/new/ 用old替换new，替换所有行的第一个匹配 %s/old/new/g 用old替换new，替换整个文件的所有匹配 :10,20 s/^/ /g 在第10行知第20行每行前面加四个空格，用于缩进。 ddp 交换光标所在行和其下紧邻的一行。 移动命令h 左移一个字符l 右移一个字符，这个命令很少用，一般用w代替。k 上移一个字符j 下移一个字符 以上四个命令可以配合数字使用，比如20j就是向下移动20行，5h就是向左移动5个字符，在Vim中，很多命令都可以配合数字使用，比如删除10个字符10x，在当前位置后插入3个！，3a！，这里的Esc是必须的，否则命令不生效。 w 向前移动一个单词（光标停在单词首部），如果已到行尾，则转至下一行行首。此命令快，可以代替l命令。 b 向后移动一个单词 2b 向后移动2个单词 e，同w，只不过是光标停在单词尾部 ge，同b，光标停在单词尾部。 ^ 移动到本行第一个非空白字符上。 0（数字0）移动到本行第一个字符上， 移动到本行第一个字符。同0健。 $ 移动到行尾 3$ 移动到下面3行的行尾 gg 移动到文件头。 = [[ G（shift + g） 移动到文件尾。 = ]] f（find）命令也可以用于移动，fx将找到光标后第一个为x的字符，3fd将找到第三个为d的字符。 F 同f，反向查找。 跳到指定行，冒号+行号，回车，比如跳到240行就是 :240回车。另一个方法是行号+G，比如230G跳到230行。 Ctrl + e 向下滚动一行 Ctrl + y 向上滚动一行 Ctrl + d 向下滚动半屏 Ctrl + u 向上滚动半屏 Ctrl + f 向下滚动一屏 Ctrl + b 向上滚动一屏 撤销和重做u 撤销（Undo） U 撤销对整行的操作 Ctrl + r 重做（Redo），即撤销的撤销。 删除命令x 删除当前字符 3x 删除当前光标开始向后三个字符 X 删除当前字符的前一个字符。X=dh dl 删除当前字符， dl=x dh 删除前一个字符 dd 删除当前行 dj 删除上一行 dk 删除下一行 10d 删除当前行开始的10行。 D 删除当前字符至行尾。D=d$ d$ 删除当前字符之后的所有字符（本行） kdgg 删除当前行之前所有行（不包括当前行） jdG（jd shift + g） 删除当前行之后所有行（不包括当前行） :1,10d 删除1-10行 :11,$d 删除11行及以后所有的行 :1,$d 删除所有行 J(shift + j) 删除两行之间的空行，实际上是合并两行。 拷贝和粘贴yy 拷贝当前行 nyy 拷贝当前后开始的n行，比如2yy拷贝当前行及其下一行。 p 在当前光标后粘贴,如果之前使用了yy命令来复制一行，那么就在当前行的下一行粘贴。 shift+p 在当前行前粘贴 :1,10 co 20 将1-10行插入到第20行之后。 :1,$ co $ 将整个文件复制一份并添加到文件尾部。 正常模式下按v（逐字）或V（逐行）进入可视模式，然后用jklh命令移动即可选择某些行或字符，再按y即可复制 ddp交换当前行和其下一行 xp交换当前字符和其后一个字符 剪切命令正常模式下按v（逐字）或V（逐行）进入可视模式，然后用jklh命令移动即可选择某些行或字符，再按d即可剪切 ndd 剪切当前行之后的n行。利用p命令可以对剪切的内容进行粘贴 :1,10d 将1-10行剪切。利用p命令可将剪切后的内容进行粘贴。 :1, 10 m 20 将第1-10行移动到第20行之后。 退出命令:wq 保存并退出 ZZ 保存并退出 :q! 强制退出并忽略所有更改 :e! 放弃所有修改，并打开原来文件。 窗口命令:split或new 打开一个新窗口，光标停在顶层的窗口上 :split file或:new file 用新窗口打开文件 split打开的窗口都是横向的，使用vsplit可以纵向打开窗口。 Ctrl+ww 移动到下一个窗口 Ctrl+wj 移动到下方的窗口 Ctrl+wk 移动到上方的窗口 关闭窗口:close 最后一个窗口不能使用此命令，可以防止意外退出vim。:q 如果是最后一个被关闭的窗口，那么将退出vim。 ZZ 保存并退出。 关闭所有窗口，只保留当前窗口:only 录制宏按q键加任意字母开始录制，再按q键结束录制（这意味着vim中的宏不可嵌套），使用的时候@加宏名，比如qa。。。q录制名为a的宏，@a使用这个宏。 执行shell命令:!command :!ls 列出当前目录下文件 :!perl -c script.pl 检查perl脚本语法，可以不用退出vim，非常方便。 :!perl script.pl 执行perl脚本，可以不用退出vim，非常方便。 :suspend或Ctrl – Z 挂起vim，回到shell，按fg可以返回vim。 注释命令perl程序中#开始的行为注释，所以要注释某些行，只需在行首加入# 3,5 s/^/#/g 注释第3-5行 3,5 s/^#//g 解除3-5行的注释 1,$ s/^/#/g 注释整个文档。 :%s/^/#/g 注释整个文档，此法更快。 帮助命令:help or F1 显示整个帮助:help xxx 显示xxx的帮助，比如 :help i, :help CTRL-[（即Ctrl+[的帮助）。:help ‘number’ Vim选项的帮助用单引号括起:help 特殊键的帮助用&lt;&gt;扩起:help -t Vim启动参数的帮助用-:help i_ 插入模式下Esc的帮助，某个模式下的帮助用模式_主题的模式 帮助文件中位于||之间的内容是超链接，可以用Ctrl+]进入链接，Ctrl+o（Ctrl + t）返回 其他非编辑命令. 重复前一次命令 :set ruler? 查看是否设置了ruler，在.vimrc中，使用set命令设制的选项都可以通过这个命令查看 :scriptnames 查看vim脚本文件的位置，比如.vimrc文件，语法文件及plugin等。 :set list 显示非打印字符，如tab，空格，行尾等。如果tab无法显示，请确定用set lcs=tab:&gt;-命令设置了.vimrc文件，并确保你的文件中的确有tab，如果开启了expendtab，那么tab将被扩展为空格。 vi命令示例大全进入vivi filename # 打开或新建文件，并将光标置于第一行首vi +n filename # 打开文件，并将光标置于第n行首vi + filename # 打开文件，并将光标置于最后一行首vi +/pattern filename # 打开文件，并将光标置于第一个与pattern匹配的串处vi -r filename # 在上次正用vi编辑时发生系统崩溃，恢复filenamevi filename….filename # 打开多个文件，依次进行编辑保存退出w # 保存当前文件 w /tmp1 # 另存为/tmp1 20,59w /tmp1 # 仅将20-59行之间的内存另存为/tmp1 x 或 wq # 保存退出 q # 退出vi q! # 退出不保存 !command # 执行shell命令command n1,n2 w !command # 将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入 r !command # 将命令command的输出结果放到当前行 w !sudo tee % # 保存没权限时，可获取权限再保存 光标移动h # 光标左移一个字符 l # 光标右移一个字符 space # 光标右移一个字符 Backspace # 光标左移一个字符 k 或 Ctrl+p # 光标上移一行 j 或 Ctrl+n # 光标下移一行 Enter # 光标下移一行 w 或 W # 光标右移一个字至字首 b 或 B # 光标左移一个字至字首 e 或 E # 光标右移一个字至字尾 ) # 光标移至句尾 ( # 光标移至句首 } # 光标移至段落开头 { # 光标移至段落结尾 nG # 光标移至第n行首 n+ # 光标下移n行 n- # 光标上移n行 n$ # 光标移至第n行尾 H # 光标移至屏幕顶行 M # 光标移至屏幕中间行 L # 光标移至屏幕最后行 0 # （注意是数字零）光标移至当前行首 $ # 光标移至当前行尾 屏幕翻滚Ctrl+u # 向文件首翻半屏 Ctrl+d # 向文件尾翻半屏 Ctrl+f # 向文件尾翻一屏 Ctrl＋b # 向文件首翻一屏 nz # 将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部 插入i # 在光标前 I # 在当前行首 a # 光标后 A # 在当前行尾 o # 在当前行之下新开一行 O # 在当前行之上新开一行 r # 替换当前字符 R # 替换当前字符及其后的字符，直至按ESC键 s # 从当前光标位置处开始，以输入的文本替代指定数目的字符 S # 删除指定数目的行，并以所输入文本代替之 ncw 或 nCW # 修改指定数目的字 nCC # 修改指定数目的行 删除ndw 或 ndW # 删除光标处开始及其后的n-1个字 do # 删至行首 d$ # 删至行尾 ndd # 删除当前行及其后n-1行 x 或 X # 删除一个字符，x删除光标后的，而X删除光标前的 Ctrl+u # 删除输入方式下所输入的文本 n1,n2 d # 将n1行到n2行之间的内容删除 %d # 删除全部内容 1,$d # 删除全部内容 复制粘贴、剪切、移动yy # 复制当前行 nyy # 复制当前行开始的n行 先按 v 然后方向键选择区域，按 y 复制选中行 dd # 剪切当前行 p（小） # 在当前光标处下面粘贴内容。 P（大） # 在当前光标处上面粘贴内容 n1,n2 co n3 # 将n1行到n2行之间的内容拷贝到第n3行下 n1,n2 m n3 # 将n1行到n2行之间的内容移至到第n3行下 搜索（查找）/abc # 从光标开始处向文件尾搜索abc ?abc # 从光标开始处向文件首搜索abc //abc # 从光标开始处向文件尾搜索/abc，其中/是转义 n # 在同一方向重复上一次搜索命令 N # 在反方向上重复上一次搜索命令 替换s/vivian/sky/ # 替换当前行第一个 vivian 为 sky s/vivian/sky/g # 替换当前行所有 vivian 为 sky n,$s/vivian/sky/ # 替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky n,$s/vivian/sky/g # 替换第 n 行开始到最后一行中每一行所有 vivian 为sky %s/vivian/sky/g # （等同于 g/vivian/s//sky/） 替换每一行的每一个 vivian 为 sky s#vivian/#sky/# # 替换当前行第一个 vivian/ 为 sky/（可以使用 #或+作为分隔符，此时中间出现的 / 不会作为分隔符） s/p1/p2/g # 将当前行中所有p1均用p2替代 n1,n2s/p1/p2/g # 将第n1至n2行中所有p1均用p2替代 g/p1/s//p2/g # 将文件中所有p1均用p2替换 寄存器”?nyy # 将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字 “?nyw # 将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字 “?nyl # 将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字 “?p # 取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字 ndd # 将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。 选项设置set number # 显示行号 set number! # 不显示行号，其它选项同理加！号 set all # 列出所有选项设置情况 set term # 设置终端类型 set ignorance # 在搜索中忽略大小写 set list # 显示制表位(Ctrl+I)和行尾标志（$) set report # 显示由面向行的命令修改过的数目 set terse # 显示简短的警告信息 set warn # 在转到别的文件时若没保存当前文件则显示NO write信息 set nomagic # 允许在搜索模式中，使用前面不带“”的特殊字符 set nowrapscan # 禁止vi在搜索到达文件两端时，又从另一端开始 set mesg # 允许vi显示其他用户用write写到自己终端上的信息","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"vim","slug":"vim","permalink":"/tags/vim/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"vscode好用的插件","slug":"vscode好用的插件","date":"2019-06-18T13:29:15.000Z","updated":"2019-08-11T09:14:21.137Z","comments":true,"path":"2019/06/18/vscode好用的插件/","link":"","permalink":"/2019/06/18/vscode好用的插件/","excerpt":"","text":"1、Custom CSS and JS Loader 用于自定义CSS和JS 2、SynthWare 84关键字高亮主题、霓虹主题link 离线安装 code --install-extension debugger-for-chrome.vsix","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"vscode","slug":"vscode","permalink":"/tags/vscode/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"html代码重构为微信小程序","slug":"html代码重构为微信小程序","date":"2019-06-17T12:21:46.000Z","updated":"2019-09-06T13:04:03.741Z","comments":true,"path":"2019/06/17/html代码重构为微信小程序/","link":"","permalink":"/2019/06/17/html代码重构为微信小程序/","excerpt":"","text":"原项目地址 小程序地址 参考学习微信小程序 详解弹框wx.showToast、wx.showModal、wx.showActionSheet，modal控件解释及input输入框值的获取一、wx.showToast wx.showToast({ title: &#39;失败&#39;,//提示文字 duration:2000,//显示时长 mask:true,//是否显示透明蒙层，防止触摸穿透，默认：false icon:&#39;success&#39;, //图标，支持&quot;success&quot;、&quot;loading&quot; success:function(){ },//接口调用成功 fail: function () { }, //接口调用失败的回调函数 complete: function () { } //接口调用结束的回调函数 })二、wx.showModal wx.showModal({ title: &#39;删除图片&#39;, content: &#39;确定要删除该图片？&#39;, showCancel: true,//是否显示取消按钮 cancelText:&quot;否&quot;,//默认是“取消” cancelColor:&#39;skyblue&#39;,//取消文字的颜色 confirmText:&quot;是&quot;,//默认是“确定” confirmColor: &#39;skyblue&#39;,//确定文字的颜色 success: function (res) { if (res.cancel) { //点击取消,默认隐藏弹框 } else { //点击确定 temp.splice(index, 1), that.setData({ tempFilePaths: temp, }) } }, fail: function (res) { },//接口调用失败的回调函数 complete: function (res) { },//接口调用结束的回调函数（调用成功、失败都会执行） })三、wx.showActionSheet wx.showActionSheet({ itemList: [&#39;列1&#39;,&#39;列2&#39;,&#39;列3&#39;],//显示的列表项 success: function (res) {//res.tapIndex点击的列表项 console.log(&quot;点击了列表项：&quot; + that[res.tapIndex]) }, fail: function (res) { }, complete:function(res){ } })类似于alert微信小程序 循环执行 设定固定时间间隔setInterval(function () { //循环执行代码 }, 1000) //循环时间 这里是1秒 满足条件 结束循环 var a = setInterval(function () { //循环执行代码 if(结束条件) { clearInterval(a) } }, 1000) //循环时间 这里是1秒微信小程序 循环执行 设定固定时间间隔","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"小程序","slug":"小程序","permalink":"/tags/小程序/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"python各种模块下载地址","slug":"python各种模块下载地址","date":"2019-06-17T06:20:48.000Z","updated":"2019-09-06T13:04:03.742Z","comments":true,"path":"2019/06/17/python各种模块下载地址/","link":"","permalink":"/2019/06/17/python各种模块下载地址/","excerpt":"","text":"https://www.lfd.uci.edu/~gohlke/pythonlibs/#wordcloud","categories":[{"name":"生活","slug":"生活","permalink":"/categories/生活/"}],"tags":[],"keywords":[{"name":"生活","slug":"生活","permalink":"/categories/生活/"}]},{"title":"词云","slug":"词云","date":"2019-06-17T06:10:00.000Z","updated":"2019-09-06T13:04:03.740Z","comments":true,"path":"2019/06/17/词云/","link":"","permalink":"/2019/06/17/词云/","excerpt":"","text":"词云安装pip install numpy matplotlib pillow wordcloud imageio jieba snownlp itchat -i https://pypi.tuna.tsinghua.edu.cn/simple numpy 多维数组运算 matplotlib 绘图与数据可视化 pillow 图片处理 wordcloud 词云制作 imageio 图片输入输出 jieba 中文分词 snownlp 中文情感和自然语言处理 itchat 微信好友抓取分享一下曾经写过的词云:","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"hexo渲染自定义html","slug":"hexo渲染自定义html","date":"2019-06-15T01:23:20.000Z","updated":"2019-09-06T13:04:03.741Z","comments":true,"path":"2019/06/15/hexo渲染自定义html/","link":"","permalink":"/2019/06/15/hexo渲染自定义html/","excerpt":"","text":"Hexo是静态页博客生成利器，同很多博主一样，前端路上原创技术博客也是使用Hexo生成并托管在Github Page上的，但在使用Hexo的过程中遇到一个小问题，Hexo默认会对/source/里的所有页面应用主题模板渲染，但有一些前端作品或demo页我们不希望经过渲染，而是能保持完全自定义的样子，那该怎么用Hexo添加自定义的web页面呢？ 下面介绍两种方法。 第一种方法是使用Hexo提供的跳过渲染配置，适用于整个目录的设置。具体步骤，打开博客根目录_config.yml，找到其中skip_render项，这个项目用来配置/source/中需要跳过渲染的文件或目录，例如希望跳过/source/projects/里的所有文件渲染，可以配置为： skip_render: projects/** 匹配规则是一种类似正则的规则，官方给出的参考是这个。另外在测试这个功能的时候发现，Hexo的内部缓存不是特别好用，有时候你修改了配置但生成出来的内容不一定及时应用了新配置，最好在生成之前执行一下hexo clean命令，清除掉旧的生成文件和缓存。 第二种方法是给单个文件添加不应用模板的标记，适用于个别特殊文件的处理。例如我们的网站如果要使用百度统计，往往需要在根目录放一个html格式的验证文件，这个文件默认也会经过用主题模板渲染，避免渲染的办法就是在文件头部添加如下内容： --- layout: false ---这样，这个文件就不会经过模板渲染，最终发布到/public/里的文件就是去掉标记后的文件的样子。 前端路上原创技术文章，转载请注明出处：https://refined-x.com/2017/07/10/Hexo自定义页面的方法/","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"/tags/hexo/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"远程到树莓派","slug":"树莓派连接wifi","date":"2019-06-14T09:09:13.000Z","updated":"2019-09-06T13:04:03.741Z","comments":true,"path":"2019/06/14/树莓派连接wifi/","link":"","permalink":"/2019/06/14/树莓派连接wifi/","excerpt":"","text":"1.新建文件，文件名为wpa_supplicant.conf 写入 country=CN ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev update_config=1 network={ ssid=&quot;&quot; psk=&quot;&quot; key_mgmt=WPA-PSK priority=1 }引号内容SSID 是你的无线名称 PSK是你的无线密码2. 新建 ssh 文件3. putty 登录4. 键入以下命令下载vnc远程桌面工具sudo apt-get update sudo apt-get install tightvncserver5. win 下载 vncview 即可远程到raspberry pi","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"raspberry pi","slug":"raspberry-pi","permalink":"/tags/raspberry-pi/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"LaTex入门","slug":"LaTex入门","date":"2019-06-14T08:48:35.000Z","updated":"2019-09-06T13:04:03.742Z","comments":true,"path":"2019/06/14/LaTex入门/","link":"","permalink":"/2019/06/14/LaTex入门/","excerpt":"","text":"1.安装2.语法打印 Hello world打开WinEdt，建立一个新文档，将以下内容复制进入文档中，保存，保存类型选择为UTF-8。 \\documentclass{article} \\begin{document} hello, world \\end{document}然后在WinEdt的工具栏中找到编译按钮（在垃圾桶和字母B中间），在下拉菜单中选择XeTeX，并点击编译。 如果顺利的话，我们就可以顺利生成出第一个pdf文件，点击工具栏中的放大镜按钮就可以快速打开生成的pdf文件。 加入中文，标题，作者和注释后的Hello World. \\documentclass{article} \\usepackage{CJK} %中文1 \\author{My Name} \\title{The Title} \\begin{document} \\begin{CJK*}{GBK}{song} %中文2 \\maketitle Hello World. \\\\ %回车 这里输入中文 \\end{CJK*} %中文3 \\end{document}章节和段落\\documentclass{article} \\usepackage{CJK} \\author{My Name} \\title{The Title} \\begin{document} \\begin{CJK*}{GBK}{song} \\maketitle \\section{一级标题} 中国…… \\subsection{二级标题} Beijing is the capital of China. \\subsubsection{三级标题} \\paragraph{Tian&#39;anmen Square}is in the center of Beijing \\subparagraph{Chairman Mao} is in the center of Tian&#39;anmen Square \\subsection{二级标题} \\paragraph{Sun Yat-sen University} is the best university in Guangzhou. \\end{CJK*} \\end{document}加入目录将\\maketitle改为\\tableofcontents，即可。 \\documentclass{article} \\usepackage{CJK} \\author{My Name} \\title{The Title} \\begin{document} \\begin{CJK*}{GBK}{song} \\tableofcontents \\section{一级标题} 中国…… \\subsection{二级标题} Beijing is the capital of China. \\subsubsection{三级标题} \\paragraph{Tian&#39;anmen Square}is in the center of Beijing \\subparagraph{Chairman Mao} is in the center of Tian&#39;anmen Square \\subsection{二级标题} \\paragraph{Sun Yat-sen University} is the best university in Guangzhou. \\end{CJK*} \\end{document}加入公式\\documentclass{article} \\usepackage{amsmath} \\usepackage{amssymb} \\begin{document} The Newton&#39;s second law is F=ma. The Newton&#39;s second law is $F=ma$. The Newton&#39;s second law is $$F=ma$$ The Newton&#39;s second law is \\[F=ma\\] Greek Letters $\\eta$ and $\\mu$ Fraction $\\frac{a}{b}$ Power $a^b$ Subscript $a_b$ Derivate $\\frac{\\partial y}{\\partial t} $ Vector $\\vec{n}$ Bold $\\mathbf{n}$ To time differential $\\dot{F}$ \\end{document}*一份其实很短的 LaTeX 入门文档","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"LaTex","slug":"LaTex","permalink":"/tags/LaTex/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"浮生弱冠","slug":"浮生弱冠","date":"2019-06-08T05:26:39.000Z","updated":"2019-09-06T13:04:03.740Z","comments":true,"path":"2019/06/08/浮生弱冠/","link":"","permalink":"/2019/06/08/浮生弱冠/","excerpt":"","text":"少年不识愁滋味，爱上层楼。爱上层楼，为赋新词强说愁。 而今识尽愁滋味，欲说还休。欲说还休，却道天凉好个秋。 读书志在圣贤 非图科第为官心存军国 岂计身家 一气混元 两仪初分 三尖相照 四梢齐备 五行攒聚 六合弥真 七疾存身 八绝奇巧 九九归真 十丈红尘做“真丈夫”也！ 朕为大地山河主， 忧国忧民事转烦。 百年三万六千日， 不及僧家半日闲。炮制虽繁必不敢省人工品味虽贵必不敢减物力","categories":[{"name":"生活","slug":"生活","permalink":"/categories/生活/"}],"tags":[],"keywords":[{"name":"生活","slug":"生活","permalink":"/categories/生活/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-06-06T15:44:57.513Z","updated":"2019-06-04T01:58:22.455Z","comments":true,"path":"2019/06/06/hello-world/","link":"","permalink":"/2019/06/06/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]},{"title":"使用hexo+github快速搭建个人博客","slug":"使用hexo+github快速搭建个人博客","date":"2019-06-05T00:00:38.000Z","updated":"2019-09-06T13:04:03.741Z","comments":true,"path":"2019/06/05/使用hexo+github快速搭建个人博客/","link":"","permalink":"/2019/06/05/使用hexo+github快速搭建个人博客/","excerpt":"","text":"安装安装前提在安装前，先确保电脑上已经安装了 Node.js 和 Git环境。 安装 Hexosudo npm install hexo-cli -g官方是使用 npm 进行安装，有推荐使用 yarn进行安装，关于 yarn和 npm 优劣分析，可以参考这篇文章《Yarn vs npm: 你需要知道的一切》 建站先新建一个blog文件夹，然后进入该文件夹运行： 初始化: hexo init继续运行: hexo g &amp;&amp; hexo s 运行成功后会发现提示信息： MacOSdeMacBook-Pro:lovely macos$ hexo s INFO Start processing INFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop这个时候访问 http://localhost:4000/ 就会发现网站已经建好了！ 常用命令以下 4 个是我在搭建过程中发现使用频率最高的 4 个命令，甚至我感觉只要会这 4 个命令就可以了。 1.generate生成静态文件hexo generate 2.server启动服务器hexo server 3.deploy部署网站hexo deploy 4.clean清除缓存文件（db.json）和已生成的静态文件（public）hexo clean 更多命令和参数请看 这里！ 部署到 Github首先先到 Github 上新建一个仓库，仓库名的格式为：*.github.io例如我的就是dearzhe.github.io ，创建好后，复制仓库的 HTTPS地址，打开blog根目录下的 _config.yml文件，拖动到底部找到deploy配置，按照以下格式修改并保存： deploy:type: gitrepo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .gitbranch: master这个时候安装 hexo-deployer-git 自动部署发布工具npm install hexo-deployer-git --save 配置SSH设置user name和email： git config –global user.name “你的GitHub用户名”git config –global user.email “你的GitHub注册邮箱”生成ssh密钥:输入下面命令 ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot; 一般情况下是不需要密码的，所以，接下来直接回车就好。此时，在用户文件夹下就会有一个新的文件夹.ssh，里面有刚刚创建的ssh密钥文件id_rsa和id_rsa.pub。vim ~/.ssh/id_rsa.pub 注：id_rsa文件是私钥，要妥善保管，id_rsa.pub是公钥文件。 美化主题###安装 NexTgit clone https://github.com/theme-next/hexo-theme-next 修改_config.yml 文件里 theme 配置： theme: hexo-theme-next 切换成NexT主题，在hexo根文件夹下，编辑_config.yml文件 theme: hexo-theme-next 切换后，清下本地缓存hexo clean 执行hexo s本地产看NexT主题效果 切换主题在列表中选择一款自己喜欢的主题风格。 Schemesscheme: Muse //默认主题#scheme: Mist#scheme: Pisces //我选的是这个#scheme: Gemini 设置Menu默认只有两个首页和归档. 如果还要添加，编辑themes/next/_config.yml： menu: home: / || home //首页 about: /about/ || user //关于 tags: /tags/ || tags //标签 categories: /categories/ || th //分类 archives: /archives/ || archive //归档 schedule: /schedule/ || calendar //日程表 sitemap: /sitemap.xml || sitemap //站点地图 创建“分类”页面hexo new page categories 给标签页面添加类型我们在source文件夹中的tags文件夹下找到index.md文件，并在它的头部加上type属性。title: 文章分类date: 2017-05-27 13:47:40 type: “categories” #这部分是新添加的 创建“标签”页面hexo new page tagstitle: tagsdate: 2018-08-06 22:48:29type: “tags” #新添加的内容 给模板添加分类属性现在我们打开scarffolds文件夹里的post.md文件，给它的头部加上categories:，这样我们创建的所有新的文章都会自带这个属性，我们只需要往里填分类，就可以自动在网站上形成分类了。title: 使用-Hexo-和-Github-快速搭建个人博客date: 1558506405000categories:tags:` 设置侧边栏头像编辑主题的_config.yml，新增字段 avatar， 值设置成头像的链接地址。 其中，头像的链接地址可以是： 完整的互联网 URL，例如：https://avatars1.githubusercontent.com/u/32269?v=3&amp;s=460 站点内的地址，例如：url: /images/avatar.gif 部署到 github 一个 README.md在Hexo目录下的source根目录新建 一个README.md。修改_config.yml中的skip_render参数值为README.md保存退出即可。使用hexo d 命令就不会在渲染 README.md 这个文件了。 参考设置侧边栏头像next主题配置Hexo系列教程: (五)部署时保证README.md不被渲染","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"vscode 配置java语言环境","slug":"vscode-配置java语言环境","date":"2019-05-25T10:41:00.000Z","updated":"2019-08-19T10:44:56.928Z","comments":true,"path":"2019/05/25/vscode-配置java语言环境/","link":"","permalink":"/2019/05/25/vscode-配置java语言环境/","excerpt":"","text":"先安装 Java 语言相关的插件 4 枚Language Support for Java(TM) by Red HatDebugger for JavaJava Test RunnerMaven for Java这时候还需要配置一下 java.home，我的是&quot;java.home&quot;: &quot;/Library/Java/ JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home&quot;,复制代码大功告成，现在你可以在 vs code 下创建一个 test.java 开始写 Hello vscode! 了。 public class test { public static void main(String[] args ){ System.out.println(&quot;Hello vscode!&quot;); } }点击 调试 或者按下 F5 运行这久经码场的输出语句。","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"简单实用的js小技巧","slug":"简单实用的js小技巧","date":"2019-05-17T05:46:24.000Z","updated":"2019-09-06T13:04:03.740Z","comments":true,"path":"2019/05/17/简单实用的js小技巧/","link":"","permalink":"/2019/05/17/简单实用的js小技巧/","excerpt":"","text":"document.body.innerTextdata:text/html, &lt;html contenteditable&gt;document.body.contentEditable=ture","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"/tags/javascript/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"vscode右键添加菜单","slug":"vscode右键添加菜单","date":"2019-04-18T03:16:46.000Z","updated":"2019-08-11T09:15:42.857Z","comments":true,"path":"2019/04/18/vscode右键添加菜单/","link":"","permalink":"/2019/04/18/vscode右键添加菜单/","excerpt":"","text":"新建 1.reg 键入 Windows Registry Editor Version 5.00 [HKEY_CLASSES_ROOT\\*\\shell\\VSCode] @=&quot;Open with Code&quot; &quot;Icon&quot;=&quot;C:\\\\Users\\\\m_c\\\\AppData\\\\Local\\\\Programs\\\\Microsoft VS Code\\\\Code.exe&quot; [HKEY_CLASSES_ROOT\\*\\shell\\VSCode\\command] @=&quot;\\&quot;CC:\\\\Users\\\\m_c\\\\AppData\\\\Local\\\\Programs\\\\Microsoft VS Code\\\\Code.exe\\&quot; \\&quot;%1\\&quot;&quot; Windows Registry Editor Version 5.00 [HKEY_CLASSES_ROOT\\Directory\\shell\\VSCode] @=&quot;Open with Code&quot; &quot;Icon&quot;=&quot;C:\\\\Users\\\\m_c\\\\AppData\\\\Local\\\\Programs\\\\Microsoft VS Code\\\\Code.exe&quot; [HKEY_CLASSES_ROOT\\Directory\\shell\\VSCode\\command] @=&quot;\\&quot;C:\\\\Users\\\\m_c\\\\AppData\\\\Local\\\\Programs\\\\Microsoft VS Code\\\\Code.exe\\&quot; \\&quot;%V\\&quot;&quot; Windows Registry Editor Version 5.00 [HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\VSCode] @=&quot;Open with Code&quot; &quot;Icon&quot;=&quot;C:\\\\Users\\\\m_c\\\\AppData\\\\Local\\\\Programs\\\\Microsoft VS Code\\\\Code.exe&quot; [HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\VSCode\\command] @=&quot;\\&quot;C:\\\\Users\\\\m_c\\\\AppData\\\\Local\\\\Programs\\\\Microsoft VS Code\\\\Code.exe\\&quot; \\&quot;%V\\&quot;&quot; 替换vscode.exe 路径； 双击 打开。","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"vscode","slug":"vscode","permalink":"/tags/vscode/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura","date":"2018-12-12T14:16:01.000Z","updated":"2019-06-01T14:21:46.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura/","link":"","permalink":"/2018/12/12/Hexo-Theme-Sakura/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]}]}